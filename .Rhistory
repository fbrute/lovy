test_file(path = "tests.mixr.R1")
test_file(path = "tests.mixr.R1", reporter ="summary")
detach("package:testthat", unload=TRUE)
library("testthat", lib.loc="/usr/lib64/R/library")
test_file(path = "tests.mixr.R1", reporter ="summary")
test_file(path = "tests.mixr.R1")
test_file
test_file(path = "tests.mixr.R1")
source("mixr.R")
source("mixr.R")
test_file(path = "tests.mixr.R1")
test_file(path = "tests.mixr.R")
library(testthat)
test_file("./mixr/tests.mixr.R")
source('~/Documents/Trafin/lovy/mixr/tests.R')
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
test_file("./mixr/tests.mixr.R")
test_that("test", expect_that(1 > 0 , is_true))
test_that("test", expect_that(1 > 0 , is_true()))
test_that("test", expect_that(1 > 3 , is_true()))
test_that(path = "test", expect_that(1 > 3 , is_true()))
test_file(path="./mixr/tests.mixr.R")
library("testthat", lib.loc="/usr/lib64/R/library")
detach("package:testthat", unload=TRUE)
library("testthat", lib.loc="/usr/lib64/R/library")
test_file
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
mixr.test()
months("2012-01-01")
months(as.Date("2012-01-01")
)
months.Date("2012-01-01")
a.Date("2012-01-01")
format(as.Date("2012-01-01"),"%m")
format(as.Date("2012-04-01"),"%m")
mixr.test()
mixr.test()
remove.packages(testthat)
remove.packages("testthat")
install.packages("testthat")
library(testthat)
expect_equal(1, is.numeric())
expect_true(is.numeric(1))
expect_true(is.numeric("i"))
test_file("./mixr/tests.mixr.R")
library("testthat", lib.loc="/usr/lib64/R/library")
test_file("./mixr/tests.mixr.R")
install.packages("testthat")
library("testthat", lib.loc="/usr/lib64/R/library")
detach("package:testthat", unload=TRUE)
library("testthat", lib.loc="/home//fbrute/R/x86_64-pc-linux-gnu-library//3.1/testthat//libs")
library("testthat", lib.loc="/home//fbrute/R/x86_64-pc-linux-gnu-library//3.1")
test_file("./mixr/tests.mixr.R")
remove.packages("testthat", lib="/usr/lib64/R/library")
remove.packages("testthat", lib="/usr/lib64/R/library")
library("testthat", lib.loc="/usr/lib64/R/library")
remove.packages("testthat")
remove.packages("testthat", lib="/usr/lib64/R/library")
library("testthat", lib.loc="/home//fbrute/R/x86_64-pc-linux-gnu-library//3.1")
test_file("./mixr/tests.mixr.R")
test_file("./mixr/tests.mixr.R")
test_file("./mixr/tests.mixr.R444")
test_file("./mixr/tests.mixr.R")
mixr.test()
mixr.test()
con = dbConnect(dbDriver("MySQL"), user="dbmeteodb",
password="dbmeteodb",
dbname="dbmeteodbtest",
host="localhost")
mixr.test()
test_package("/home//fbrute/R/x86_64-pc-linux-gnu-library//3.1/testthat")
test_package("/home//fbrute/R/x86_64-pc-linux-gnu-library//3.1/testthat/R/testthat)
)
)
""
''
"
test_package("/home//fbrute/R/x86_64-pc-linux-gnu-library//3.1/testthat/R/testthat")
detach("package:RUnit", unload=TRUE)
test_file("./mixr/tests.mixr.R")
test_file()
test_file
dbg(test_file)
test_file)
test_file())
test_file()
detach("package:testthat", unload=TRUE)
library("testthat", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
test_file()
install.packages("devtools")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
devtools::use_testthat
devtools::use_testthat()
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
detach("package:devtools", unload=TRUE)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages("roxygen2")
devtools::install_github("hadley/devtools")
library(devtools)
has_devel)
has_devel()
has_devel()
devtools::create("~/Documents/Trafin/fouyol/recherche/aerosol")
dir.create("~/Documents/Trafin/fouyol/recherche/aerosol")
devtools::create("~/Documents/Trafin/fouyol/recherche/aerosol")
devtools::create("~/Documents/Trafin/fouyol/recherche/dvpt/aerosol")
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbyday')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('soundingbyday')
library(devtools)
devtools::test("shiny")
devtools::test(shiny)
library(testthat)
testthat::test_check(shiny)
testthat::test_check("shiny")
testthat::test_package(shiny)
testthat::test_package("shiny")
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
mainreg()
mainreg()
mainreg()
mainreg()
paste("~/Documents/Trafin/lovy/df.powers2k",
substr(input$year,3,4),
".RData",sep="")
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
mainreg()
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
cork
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
View(df.cors)
View(df.cor)
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.8.R')
mainreg()
qt(0.95, df = 25)
qt(0.975, df = 25)
2869/3008
(2869/3008)^2
View(df)
as.character(2007:2012)
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R')
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R')
mainreg()
getMysqlData
mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
rm(getData)
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
rm(getCon)
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
rm(getMysqlData)
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/power.R')
source('~/Documents/Trafin/lovy/power/power.R')
source('~/Documents/Trafin/lovy/power/power.R');mainpower()
load("~/Documents/Trafin/fouyol/recherche/dvpt/aerosol/data/df.power.rda")
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R')
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
View(df.power)
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
View(df.power)
View(df.power)
View(df.power)
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
View(df.power)
View(df.power)
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
View(df.power)
quantile(df.power, probs = (0.05, 0.95))
quantile(df.power$power, probs = (0.05, 0.95))
quantile(df.power$power, probs = c(0.05, 0.95))
quantile(df.power$power, probs = c(0.05, 0.95))[1]
quantile(df.power$power, probs = c(0.05, 0.95))[2]
df.power2 <- df.power
View(df.power)
subset(df.power, power < 914.4 & power > 427.3)
quantile(df.power$pm10, probs = c(0.05, 0.95))[2]
quantile(df.power$pm10, probs = c(0.05, 0.95))
quantile(df.power$power, probs = c(0.05, 0.95))
subset(df.power, power < 914.4 & power > 427.3 & pm10 > 12.8 & pm10 < 60.7458)
quantile(df.power$pm10, probs = c(0.05))
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
source('~/Documents/Trafin/lovy/power/regressions/regression1.10.R'); mainreg()
append(1:13,17)
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
View(df.power)
lmpower <- lm(pm10 ~ power, data = df.power)
summary(lmpower)
df.jul2k12 <- subset(df.power, date > as.Date("30-06-2012", and date < as.Date("01-08-2012")))
df.jul2k12 <- subset(df.power, date > as.Date("30-06-2012") & date < as.Date("01-08-2012"))
View(df.power)
df.jul2k12 <- subset(df.power, date > as.Date("2012-06-30") & date < as.Date("2012-08-01"))
lmpower.jul2k12 <- lm(pm10 ~ power, data = df.jul2k12)
summary(lmpower.jul2k12)
df.may_aug2k12 <- subset(df.power, date > as.Date("2012-04-30") & date < as.Date("2012-09-01"))
lmpower.may_aug2k12 <- lm(pm10 ~ power, data = df.may_aug2k12)
summary(lmpower.may_aug2k12)
plot(df.may_aug2k12$pm10 ~ df.may_aug2k12$power)
abline(lmpower.may_aug2k12)
24*60
14/2
View(df.power)
lmpower.may_aug2k12 <- lm(pm10 ~ power + mixr, data = df.may_aug2k12)
lmpower.may_aug2k12 <- lm(pm10 ~ power + meanmixr, data = df.may_aug2k12)
summary(lmpower.may_aug2k12)
lmpower.may_aug2k12 <- lm(pm10 ~ meanmixr, data = df.may_aug2k12)
summary(lmpower.may_aug2k12)
anova(lmpower.may_aug2k12)
lmpower.may_aug2k12 <- lm(pm10 ~ power + meanmixr, data = df.may_aug2k12)
anova(lmpower.may_aug2k12)
View(df.power)
hist(df.power)
hist(df.power$pm10)
barplot(df.power$pm10)
barplot(df.power$pm10 ~ df.power$year)
g <- ggplot(data = df.power)
library(ggplot2)
g <- ggplot(data = df.power)
g + geom_bar(aes(x = month, y = pm10, fill = year), stat="identity", position = "dodge")
g + geom_bar(aes(x = month, y = pm10, fill = year))
g + geom_bar(aes(x = month, y = pm10, fill = year), stat="identity", position = "dodge")
g + geom_bar(aes(x = year, y = pm10, fill = month), stat="identity", position = "dodge")
g + geom_bar(aes(x = year, y = pm10), stat="identity", position = "dodge")
g + geom_bar(aes(x = year, y = pm10, fill = month), stat="identity", position = "dodge")
choose(10,2)
0.915^2
sqrt(100 * 0.11 * (1-0.11))
sqrt(100 * 0.11 * (1-0.11))*2
sqrt(100 * 0.11 * (1-0.11))
0.12^4
1-0.12^4
qnorm(0.975)
qnorm(0.99)
195528-1627
276*(17.8-10.4)^2 + 468 * (13.6-7.4)^2 + 87 *(15.6-8.3)^2
(17.8-10.4)^2 + (13.6-7.4)^2 +(15.6-8.3)^2
10.4+7.4+8.3
26.1/3
(17.8-8.7)^2 + (13.6-8.7)^2 +(15.6-8.7)^2
276*(17.8-8.7)^2 + 468*(13.6-8.7)^2 +87*(15.6-8.7)^2
1627/2
193901/828
813.5/234.18
install.packages("RUnit")
install.packages("testthat")
library(testthat)
install.packages("devtools")
library(autotest)
install.packages("autotest")
getwd()
library(devtools)
devtools::use_testthat
devtools::use_testthat()
devtools::test
devtools::test()
detach(testthat)
detach("package:testthat", unload=TRUE)
devtools::use_testthat()
library(devtools)
devtools::use_testthat()
devtools::use_testthat()
remove(devtools)
remove.packages(devtools)
remove.packages("devtools")
remove.packages("testthat")
install.packages("devtools")
library(devtools)
devtools::use_testthat()
devtools::use_testthat()
devtools::check()
remove.packages(devtools)
devtools::check()
devtools::install_github("hadley/devtools")
library(devtools)
library(devtools)
devtools::check()
remove.packages("devtools")
devtools::check()
devtools::install_github("hadley/devtools")
install.packages("devtools")
devtools::install_github("hadley/devtools")
dev.capabilities()
library(devtools)
devtools::check()
library(roxygen2)
devtools::check()
library(testthat)
install.packages("testthat")
devtools::check()
library(testthat)
devtools::check()
library(sqldf)
install.packages("sqldf")
install.packages("RMySQL")
#context("Checking mixr mean calculation")
test_that("month to get the mean from is numeric",
{
mean = meanForAMonth(1)
expect_that(mean > 0, is_true())
}
)
test.meanForAMonth <- function(month = 1) {
checkTrue( month %in% 1:12)
}
rvm list
rvm
ls
library(devtools)
devtools::check()
getwd()
)
#context("Checking mixr mean calculation")
source("mixr.R")
test_that("month to get the mean from is numeric",
{
mean = meanForAMonth(1)
expect_that(mean > 0, is_true())
}
)
test.meanForAMonth <- function(month = 1) {
checkTrue( month %in% 1:12)
}
library(sqldf)
sqldf("select * from dbmeteodb.aot550")
sqldf("select * from dbmeteodb.aot550", host = 'localhost', dbDriver = "MySQL", user="dbmeteodb", password="dbmeteodb")
sqldf("select * from dbmeteodb.aot550", host = 'localhost', drv = "MySQL", user="dbmeteodb", password="dbmeteodb")
sqldf("select * from dbmeteodb.aot550", host = 'localhost', drv = "RMySQL", user="dbmeteodb", password="dbmeteodb")
sqldf("select * from aot550", host = 'localhost', drv = "RMySQL", user="dbmeteodb", password="dbmeteodb")
sqldf("select * from aot550", host = 'localhost', drv = "RMySQL", user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb")
sqldf("select * from aot550", host = 'localhost', drv = "RMySQL", user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb")
sqldf("select * from aot550", host = "localhost", drv = "RMySQL", user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb")
sqldf("select * from aot550", host = "localhost", drv = "RMySQL", user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb")
sqldf("select * from aot550", host = "localhost", drv = "RMySQL", user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb", verbose = T)
sqldf("select * from aot550", host = "localhost", drv = dbDriver("MySQL"), user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb", verbose = T)
dbDriver("mysql")
dbDriver("rmysql")
dbDriver("rMySQL")
library(rMySQL)
install.packages("RMySQL")
install.packages("RMySQL")
library(rMySQL)
library(RMySQL)
dbDriver("RMySQL")
dbDriver("mysql")
dbDriver("RMySQL")
dbDriver("MySQL")
sqldf("select * from aot550", host = "localhost", drv = dbDriver("MySQL"), user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb", verbose = T)
library(sqldf)
sqldf("select * from aot550", host = "localhost", drv = dbDriver("MySQL"), user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb", verbose = T)
options(sqldf.driver = "RMySQL")
sqldf("select * from aot550", host = "localhost", user="dbmeteodb", password="dbmeteodb",dbname = "dbmeteodb", verbose = T)
shiny::runApp('soundingbymonth')
source('~/Documents/trafin/fouyol/recherche/lovy/power/power.R')
mainpower()
install.packages("RMySQL")
mainpower()
install.packages("shiny")
mainpower()
shiny::runApp('soundingbymonth')
numeric()
typeof(numeric())
if (T) print "ruse"
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
if (F) print "ruse"
F
print "r"
print data()
print data
shiny::runApp('soundingbymonth')
4 * 1.608
4 * 1,608
1 + 0.608*0.02
(1 + 0.608*0.02)*100
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
load("~/Documents/trafin/fouyol/recherche/lovy/soundingbymonth/df.powers.RData")
View(df.powers)
shiny::runApp('soundingbymonth')
calcVirtualTemp <- function (T, r) {
rg = r / 1000  # Convert g/kg air sec to gr/gr)
Tv = (1 + 0.608*rg) * T
Tv
}
calcVirtualTemp(25, 20.0)
calcVirtualTemp(298, 20.0)
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
shiny::runApp('soundingbymonth')
View(data1)
calcVirtualTemp(data1$temp[i], data1$mixr[i])
shiny::runApp('soundingbymonth')
a
typeof(a)
data1$mixr[i]
shiny::runApp('soundingbymonth')
