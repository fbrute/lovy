{
    "contents" : "mainreg = function (){\n        dbg = 0\n        \n        library(RMySQL)\n        library(ggplot2)\n        source(\"~/Documents/Trafin/lovy/utils.R\")\n        if (dbg) browser()\n        \n        input = list()\n        input$year1 = 2008\n        input$year2 = 2012\n        input$years <- \"2008-2012\"\n        \n        input$start_date = paste(input$year,\"-01-01\",sep=\"\")\n        input$end_date = paste(input$year,\"-12-31\",sep=\"\")\n        \n        input$entropic_start_date = paste(input$year,\"-01-01\",sep=\"\")\n        input$entropic_end_date = paste(input$year,\"-02-28\",sep=\"\")\n        \n        #input$exclude_date = paste(input$year,\"-08-02\",sep=\"\")\n        #input$exclude_date = paste(input$year,\"-02-07\",sep=\"\")\n        load(paste(\"~/Documents/Trafin/fouyol/recherche/dvpt/aerosol/data/df.power\",\n                   substr(input$year,3,4),\n                   \".rda\",sep=\"\")\n             )\n        \n        QueryString = paste(\"select date(datetime) as date, avg(pmptp) as pm10 from pm10\", \n                            \"where year(datetime) between\", input$year1 ,\"and\", input$year2,\n                            \"and pmptp > 0 group by date(datetime) order by date(datetime)\")\n        #QueryString = \"select date(datetime) as date, avg(pmptp) as pm10 from pm10 where year(datetime) = 2012 and pmptp > 0 and hour(datetime) between 8 and 9 group by date(datetime) order by date(datetime)\"\n        \n        entropicQueryString = paste(\"select avg(pmptp) as pm10 from pm10\",\n                                        \"where date(datetime)\",\n                                                \"between\", \"'\",input$entropic_start_date,\"'\" , \n                                                        \"and\", \"'\", input$entropic_end_date,\"'\",  \n                                        \"and jour != 'Dimanche'\")\n        \n        df.pm10 = getMysqlData(QueryString)\n        entropic.df = getMysqlData(entropicQueryString)\n        entropic = entropic.df$pm10\n        \n        #if (dbg) browser()\n        \n        #entropic = 22\n        df.pm10$pm10 = ifelse((df.pm10$pm10 - entropic) >= 0,df.pm10$pm10 - entropic , 0)\n        \n        df.pm10 = subset(df.pm10, pm10>0)\n        \n        #df.powers = subset(df.powers, as.character.factor(date) != input$exclude_date)\n        \n        #df.pmpowers <- merge(df.powers, df.pm10, by=c(\"date\"),all.x = T, all.y = T)\n        # plot(df.pmpowers$power, df.pmpowers$pm10)\n        # \n        # g <- ggplot(df.pmpowers)\n        # #g + aes(power, pm10) + geom_point() + geom_smooth(method=\"lm\")\n        # g + aes(power, pm10) + geom_point(alpha = 1/3) + geom_smooth(method=\"lm\")\n        #lm( power ~ pm10, df.pmpowers)\n        \n        cork <- cor(df.power$power, df.power$pm10, use = \"complete.obs\")\n        \n        if (dbg) browser()\n        \n        #QueryString = \"select avg(pmptp) as pm10 from pm10 where date(datetime) between \"2012-01-01\" and \"2012-03-31\" and jour <=> \"dimanche\"\"\n        #df.inversions = getMysqlData(QueryString)\n        \n        if (dbg) browser()\n        \n        \n        if (dbg) browser()\n#         df.pminvpowers <- within(na.omit(df.pmpowers), \n#                                     inversion <- cut(power, quantile(power,\n#                                                                      probs =c(0, 0.5, 1),\n#                                                                      na.rm = TRUE), \n#                                                     include.lowest=TRUE, \n#                                                     labels=c(\"weak\",\"strong\"))\n#                                     )\n        \n        if (dbg) browser()\n        \n#         dfs <- split(df.pminvpowers, df.pminvpowers$inversion)\n#         \n#         cors = round(as.numeric(unlist(\n#                         lapply(dfs, function(elt) cor(x=elt$pm10, y=elt$power, use =\"complete.obs\"))\n#                         )\n#                         )\n#                 ,2)\n#         df.cors <- data.frame(levels(df.pminvpowers$inversion), cors)\n#         colnames(df.cors) <- c(\"inversion\", \"cor\")\n#         library(dplyr)\n#         df.cors <- mutate(df.cors, cor = paste(\"cor:\", cor, sep=\"\")) \n#         row.names(df.cors) <- 1:2\n        \n        if (dbg) browser()\n        df.cor = data.frame(round(cork,2))\n        colnames(df.cor) <- c(\"cor\")\n        minpower <- quantile(df.power$power, probs = c(0.05))\n        maxpower <- quantile(df.power$power, probs = c(0.95))\n        \n        minpm10 <- quantile(df.power$pm10, probs = c(0.05))\n        maxpm10 <- quantile(df.power$pm10, probs = c(0.95))\n        \n        df.power <- subset(df.power, power > minpower & power < maxpower & pm10 > minpm10 & pm10 < maxpm10)\n \n        #df.cors$cor = cor(df.pminvpowers$pm10, df.pminvpowers$powers, use =\"complete.obs\")\n        if (dbg) browser()\n        g <- ggplot(df.power)\n        #g + aes(power, pm10) + geom_point() + geom_smooth(method=\"lm\")\n        #ginv = g + aes(power, pm10) + facet_wrap(~ inversion, scales = \"free\") + geom_point(alpha = 1/3) + geom_smooth(method=\"lm\") \n        #ginv = g + aes(power, pm10) + facet_wrap(~ inversion) + geom_point(alpha = 1/3) + geom_smooth(method=\"lm\") \n        ginv = g + aes(power, pm10) + geom_point(aes(colour = factor(year))) + geom_smooth(method=\"lm\") + guides(color = guide_legend(title=\"Year \"))\n        title = paste(\"Regressions in\", input$years)\n        #ginv = ginv + geom_text(data = df.cor, aes(x = 900, y = 90, label = cor, size = 7), color =\"red\" , inherit.aes = FALSE, parse = FALSE)\n        ginv = ginv + ggtitle(title)\n        plot(ginv)\n        \n        fname = paste(\"regressions\",as.character(input$years),\".pdf\",sep=\"\")\n        if (dbg) browser()\n        ggsave(ginv, file=fname, scale = 1.8)\n}\n\ngetMysqlData <- function(queryString=\"\"){\n        #   View(queryString)\n        browser()\n        con = dbConnect(dbDriver(\"MySQL\"), user=\"dbmeteodb\", \n                        password=\"dbmeteodb\",\n                        dbname=\"dbmeteodb\",\n                        host=\"localhost\")\n        \n        # send the query\n        #                 if (dbg) browser()\n        queryResultsData <- dbSendQuery(con, queryString)\n        \n        \n        #get the data\n        data <- fetch(queryResultsData, n=-1)\n        # freeing resources\n        dbClearResult(queryResultsData) \n        dbDisconnect(con)\n        #View(data)  \n        data\n        \n        \n}\n\n# testAddQuantiles <- function(df){\n#         for (i in 1:nrow(df)) {\n#            quantiles =  quantile(df$power)\n#            q0 = quantile[1]\n#            q1 = quantile[2]\n#            power = df[i,3]\n#            if power >= quantiles[1] & df\n#    \n#         }\n# }\n",
    "created" : 1414157011879.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3784418842",
    "id" : "E5555D03",
    "lastKnownWriteTime" : 1414426623,
    "path" : "~/Documents/Trafin/lovy/power/regressions/regression1.10.R",
    "project_path" : "power/regressions/regression1.10.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}